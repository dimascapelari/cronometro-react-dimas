{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\55199\\\\Desktop\\\\Alura-React\\\\projeto\\\\src\\\\pages\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Cronometro from '../components/Cronometro';\nimport Formulario from '../components/Formulario';\nimport Lista from '../components/Lista';\nimport style from './App.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tarefas, setTarefas] = useState([]);\n  const [selecionado, setSelecionado] = useState();\n\n  function selecionaTarefa(tarefaSelecionada) {\n    setSelecionado(tarefaSelecionada);\n    setTarefas(tarefasAnteriores => tarefasAnteriores.map(tarefa => ({ ...tarefa,\n      selecionado: tarefa.id === tarefaSelecionada.id ? true : false\n    })));\n  }\n\n  function finalizarTarefa() {\n    if (selecionado) {\n      setSelecionado(undefined);\n      setTarefas(tarefasAnteriores => tarefasAnteriores.map(tarefa => {\n        if (tarefa.id === selecionado.id) {\n          return { ...tarefa,\n            selecionado: false,\n            completado: true\n          };\n        }\n\n        return tarefa;\n      }));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.AppStyle,\n    children: [/*#__PURE__*/_jsxDEV(Formulario, {\n      setTarefas: setTarefas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Lista, {\n      tarefas: tarefas,\n      selecionaTarefa: selecionaTarefa\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cronometro, {\n      selecionado: selecionado,\n      finalizarTarefa: finalizarTarefa\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UiAgXvemwbYrV6hcTIVH7S4aSzU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Cronometro","Formulario","Lista","style","App","tarefas","setTarefas","selecionado","setSelecionado","selecionaTarefa","tarefaSelecionada","tarefasAnteriores","map","tarefa","id","finalizarTarefa","undefined","completado","AppStyle"],"sources":["C:/Users/55199/Desktop/Alura-React/projeto/src/pages/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Cronometro from '../components/Cronometro';\nimport Formulario from '../components/Formulario';\nimport Lista from '../components/Lista';\nimport { ITarefa } from '../types/tarefa';\nimport style from './App.module.scss';\n\nfunction App() {\n  const [tarefas, setTarefas] = useState<ITarefa[]>([]);\n  const [selecionado, setSelecionado] = useState<ITarefa>();\n\n  function selecionaTarefa(tarefaSelecionada: ITarefa) {\n    setSelecionado(tarefaSelecionada);\n    setTarefas(tarefasAnteriores => tarefasAnteriores.map(tarefa => ({\n      ...tarefa,\n      selecionado: tarefa.id === tarefaSelecionada.id ? true : false\n    })))\n  }\n\n  function finalizarTarefa() {\n    if (selecionado) {\n      setSelecionado(undefined);\n      setTarefas(tarefasAnteriores =>\n        tarefasAnteriores.map(tarefa => {\n          if (tarefa.id === selecionado.id) {\n            return {\n              ...tarefa,\n              selecionado: false,\n              completado: true\n            }\n          }\n          return tarefa;\n        })\n      )\n    }\n  }\n  return (\n    <div className={style.AppStyle}>\n      <Formulario setTarefas={setTarefas} />\n      <Lista\n        tarefas={tarefas}\n        selecionaTarefa={selecionaTarefa}\n      />\n      <Cronometro\n        selecionado={selecionado}\n        finalizarTarefa={finalizarTarefa}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAY,EAAZ,CAAtC;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;;EAEA,SAASU,eAAT,CAAyBC,iBAAzB,EAAqD;IACnDF,cAAc,CAACE,iBAAD,CAAd;IACAJ,UAAU,CAACK,iBAAiB,IAAIA,iBAAiB,CAACC,GAAlB,CAAsBC,MAAM,KAAK,EAC/D,GAAGA,MAD4D;MAE/DN,WAAW,EAAEM,MAAM,CAACC,EAAP,KAAcJ,iBAAiB,CAACI,EAAhC,GAAqC,IAArC,GAA4C;IAFM,CAAL,CAA5B,CAAtB,CAAV;EAID;;EAED,SAASC,eAAT,GAA2B;IACzB,IAAIR,WAAJ,EAAiB;MACfC,cAAc,CAACQ,SAAD,CAAd;MACAV,UAAU,CAACK,iBAAiB,IAC1BA,iBAAiB,CAACC,GAAlB,CAAsBC,MAAM,IAAI;QAC9B,IAAIA,MAAM,CAACC,EAAP,KAAcP,WAAW,CAACO,EAA9B,EAAkC;UAChC,OAAO,EACL,GAAGD,MADE;YAELN,WAAW,EAAE,KAFR;YAGLU,UAAU,EAAE;UAHP,CAAP;QAKD;;QACD,OAAOJ,MAAP;MACD,CATD,CADQ,CAAV;IAYD;EACF;;EACD,oBACE;IAAK,SAAS,EAAEV,KAAK,CAACe,QAAtB;IAAA,wBACE,QAAC,UAAD;MAAY,UAAU,EAAEZ;IAAxB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MACE,OAAO,EAAED,OADX;MAEE,eAAe,EAAEI;IAFnB;MAAA;MAAA;MAAA;IAAA,QAFF,eAME,QAAC,UAAD;MACE,WAAW,EAAEF,WADf;MAEE,eAAe,EAAEQ;IAFnB;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GA1CQX,G;;KAAAA,G;AA4CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}